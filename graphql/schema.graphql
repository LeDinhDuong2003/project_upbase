"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type User {
    id: ID!
    name: String!
    email: String!
    role: String!
    posts: [Post!]! @hasMany
    comments: [Comment!]! @hasMany
}

type Post {
    id: ID!
    title: String!
    content: String!
    user: User! @belongsTo
    comments: [Comment!]! @hasMany
}

type Comment {
    id: ID!
    content: String!
    user: User! @belongsTo
    post: Post! @belongsTo
}

type Category {
    id: ID!
    name: String!
    posts: [Post!]! @belongsToMany
}

type Product{
    id: ID!
    title: String
    price: Float
    description: String
}

type Query {
    post(id: ID! @eq): Post @find
    userForName(id:ID! @eq,name: String! @eq) : User! @find
    user(id: ID!): User
        @field(resolver: "App\\GraphQL\\Queries\\UserQuery@__invoke")
    users: [User!]!  @paginate
    posts(
        where: 
            _@whereConditions(
                columns: [ "user_id", "created_at", "title", "content" ]
            )
    ): [Post!]! @all
    comments: [Comment!]! @all
    categories: [Category!]!
    hello: String!
    product: [Product]
}

type Mutation {
    createUser(
        name: String!
        email: String! @validate(email: true)
        password: String! @validate(min: 8)
        role: String!
    ): User! @create

    createPost(user_id: ID!, title: String!, content: String!): Post! @create

    createComment(user_id: ID!, post_id: ID!, content: String!): Comment! @create

    deleteSoftUser(id: ID! @whereKey): User @delete
    deleteUser(id: ID! @whereKey): User @forceDelete
    deleteSoftPost(id: ID! @whereKey): Post @delete
    restorePost(id: ID! @whereKey): Post @restore
}
